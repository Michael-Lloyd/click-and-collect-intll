This page is in Almost Standards Mode. Page layout may be impacted. For Standards Mode use “<!DOCTYPE html>”. localhost:3000
Loading failed for the <script> with source “https://www.googletagmanager.com/gtag/js?id=G-6M0JK9PWN1”. localhost:3000:51:109
createRuleEngine called with options: 
Object { withInteraction: true, exportButtons: true, checkProvability: true, autoReverse: {…}, intuitionisticMode: {…}, cutMode: {…}, proofTransformation: {…}, notations: {…} }
app.js:138:13
intuitionisticMode option: 
Object { value: false, onToggle: onOptionToggle(value) }
app.js:139:13
intuitionisticMode value: false app.js:140:13
Creating LLRuleEngine app.js:146:17
setupFormulaInteraction called for formula: 
Object { type: "dual", value: {…} }
rule-engine.js:111:17
Rule engine type: LLRuleEngine rule-engine.js:112:17
Options: 
Object { withInteraction: true, exportButtons: true, checkProvability: true, autoReverse: {…}, intuitionisticMode: {…}, cutMode: {…}, proofTransformation: {…}, notations: {…} }
rule-engine.js:113:17
LLRuleEngine.getRules called for formula: 
Object { type: "dual", value: {…} }
ll-mode.js:25:17
Options: 
Object { withInteraction: true, exportButtons: true, checkProvability: true, autoReverse: {…}, intuitionisticMode: {…}, cutMode: {…}, proofTransformation: {…}, notations: {…} }
ll-mode.js:26:17
isLeftSide: false ll-mode.js:27:17
Getting interactive rules ll-mode.js:35:21
Interactive rules found: 
Array [ {…} ]
ll-mode.js:37:21
Available rules for this formula: 
Array [ {…} ]
rule-engine.js:120:17
setupFormulaInteraction called for formula: 
Object { type: "dual", value: {…} }
rule-engine.js:111:17
Rule engine type: LLRuleEngine rule-engine.js:112:17
Options: 
Object { withInteraction: true, exportButtons: true, checkProvability: true, autoReverse: {…}, intuitionisticMode: {…}, cutMode: {…}, proofTransformation: {…}, notations: {…} }
rule-engine.js:113:17
LLRuleEngine.getRules called for formula: 
Object { type: "dual", value: {…} }
ll-mode.js:25:17
Options: 
Object { withInteraction: true, exportButtons: true, checkProvability: true, autoReverse: {…}, intuitionisticMode: {…}, cutMode: {…}, proofTransformation: {…}, notations: {…} }
ll-mode.js:26:17
isLeftSide: false ll-mode.js:27:17
Getting interactive rules ll-mode.js:35:21
Interactive rules found: 
Array [ {…} ]
ll-mode.js:37:21
Available rules for this formula: 
Array [ {…} ]
rule-engine.js:120:17
setupFormulaInteraction called for formula: 
Object { type: "tensor", value1: {…}, value2: {…} }
rule-engine.js:111:17
Rule engine type: LLRuleEngine rule-engine.js:112:17
Options: 
Object { withInteraction: true, exportButtons: true, checkProvability: true, autoReverse: {…}, intuitionisticMode: {…}, cutMode: {…}, proofTransformation: {…}, notations: {…} }
rule-engine.js:113:17
LLRuleEngine.getRules called for formula: 
Object { type: "tensor", value1: {…}, value2: {…} }
ll-mode.js:25:17
Options: 
Object { withInteraction: true, exportButtons: true, checkProvability: true, autoReverse: {…}, intuitionisticMode: {…}, cutMode: {…}, proofTransformation: {…}, notations: {…} }
ll-mode.js:26:17
isLeftSide: false ll-mode.js:27:17
Getting interactive rules ll-mode.js:35:21
Interactive rules found: 
Array [ {…} ]
ll-mode.js:37:21
Available rules for this formula: 
Array [ {…} ]
rule-engine.js:120:17
setupFormulaInteraction called for formula: 
Object { type: "dual", value: {…} }
rule-engine.js:111:17
Rule engine type: LLRuleEngine rule-engine.js:112:17
Options: 
Object { withInteraction: true, exportButtons: true, checkProvability: true, autoReverse: {…}, intuitionisticMode: {…}, cutMode: {…}, proofTransformation: {…}, notations: {…} }
rule-engine.js:113:17
LLRuleEngine.getRules called for formula: 
Object { type: "dual", value: {…} }
ll-mode.js:25:17
Options: 
Object { withInteraction: true, exportButtons: true, checkProvability: true, autoReverse: {…}, intuitionisticMode: {…}, cutMode: {…}, proofTransformation: {…}, notations: {…} }
ll-mode.js:26:17
isLeftSide: false ll-mode.js:27:17
Getting interactive rules ll-mode.js:35:21
Interactive rules found: 
Array [ {…} ]
ll-mode.js:37:21
Available rules for this formula: 
Array [ {…} ]
rule-engine.js:120:17
setupFormulaInteraction called for formula: 
Object { type: "dual", value: {…} }
rule-engine.js:111:17
Rule engine type: LLRuleEngine rule-engine.js:112:17
Options: 
Object { withInteraction: true, exportButtons: true, checkProvability: true, autoReverse: {…}, intuitionisticMode: {…}, cutMode: {…}, proofTransformation: {…}, notations: {…} }
rule-engine.js:113:17
LLRuleEngine.getRules called for formula: 
Object { type: "dual", value: {…} }
ll-mode.js:25:17
Options: 
Object { withInteraction: true, exportButtons: true, checkProvability: true, autoReverse: {…}, intuitionisticMode: {…}, cutMode: {…}, proofTransformation: {…}, notations: {…} }
ll-mode.js:26:17
isLeftSide: false ll-mode.js:27:17
Getting interactive rules ll-mode.js:35:21
Interactive rules found: 
Array [ {…} ]
ll-mode.js:37:21
Available rules for this formula: 
Array [ {…} ]
rule-engine.js:120:17
setupFormulaInteraction called for formula: 
Object { type: "tensor", value1: {…}, value2: {…} }
rule-engine.js:111:17
Rule engine type: LLRuleEngine rule-engine.js:112:17
Options: 
Object { withInteraction: true, exportButtons: true, checkProvability: true, autoReverse: {…}, intuitionisticMode: {…}, cutMode: {…}, proofTransformation: {…}, notations: {…} }
rule-engine.js:113:17
LLRuleEngine.getRules called for formula: 
Object { type: "tensor", value1: {…}, value2: {…} }
ll-mode.js:25:17
Options: 
Object { withInteraction: true, exportButtons: true, checkProvability: true, autoReverse: {…}, intuitionisticMode: {…}, cutMode: {…}, proofTransformation: {…}, notations: {…} }
ll-mode.js:26:17
isLeftSide: false ll-mode.js:27:17
Getting interactive rules ll-mode.js:35:21
Interactive rules found: 
Array [ {…} ]
ll-mode.js:37:21
Available rules for this formula: 
Array [ {…} ]
rule-engine.js:120:17
Rule click callback triggered for: 
Object { rule: "tensor", needPosition: true }
rule-engine.js:162:21
LLRuleEngine.buildRuleRequest called with: 
Object { rule: "tensor", needPosition: true }
ll-mode.js:227:17
LL rule request being built: 
Object { rule: "tensor" }
ll-mode.js:232:17
All children in parent: 4 ll-mode.js:263:21
Formula items (li elements): 3 ll-mode.js:264:21
Position among all children: 3 ll-mode.js:265:21
Position among formula items: 2 ll-mode.js:266:21
Final formula position: 2 ll-mode.js:270:21
Built rule request: 
Object { rule: "tensor", formulaPosition: 2 }
rule-engine.js:165:21
Applying rule to sequent rule-engine.js:173:25
applyRule called with ruleRequest: 
Object { rule: "tensor", formulaPosition: 2 }
compatibility.js:149:13
Container options: 
Object { withInteraction: true, exportButtons: true, checkProvability: true, autoReverse: {…}, intuitionisticMode: {…}, cutMode: {…}, proofTransformation: {…}, notations: {…} }
compatibility.js:154:13
intuitionisticMode option: 
Object { value: false, onToggle: onOptionToggle(value) }
compatibility.js:155:13
Sending intuitionisticMode: false compatibility.js:166:13
Full request data: 
Object { ruleRequest: {…}, sequent: {…}, notations: [], intuitionisticMode: false }
compatibility.js:172:13
Sequent data: 
Object { hyp: [], cons: (3) […] }
compatibility.js:173:13
Compressed JSON being sent: {"rr":{"r":"tensor","fp":2},"s":{"hyp":[],"cons":[{"t":"dual","v":{"t":"litt","v":"A"}},{"t":"dual","v":{"t":"litt","v":"B"}},{"t":"tensor","v1":{"t":"litt","v":"A"},"v2":{"t":"litt","v":"B"}}]},"notations":[],"intuitionisticMode":false} compatibility.js:175:13
AJAX response received: 
Object { success: true, proof: {…} }
compatibility.js:183:21
Rule application successful compatibility.js:185:25
Adding premises with rule engine: 
Object { ruleSymbols: {…}, modeName: "classical" }
compatibility.js:189:25
setupFormulaInteraction called for formula: 
Object { type: "dual", value: {…} }
rule-engine.js:111:17
Rule engine type: LLRuleEngine rule-engine.js:112:17
Options: 
Object { withInteraction: true, exportButtons: true, checkProvability: true, autoReverse: {…}, intuitionisticMode: {…}, cutMode: {…}, proofTransformation: {…}, notations: {…} }
rule-engine.js:113:17
LLRuleEngine.getRules called for formula: 
Object { type: "dual", value: {…} }
ll-mode.js:25:17
Options: 
Object { withInteraction: true, exportButtons: true, checkProvability: true, autoReverse: {…}, intuitionisticMode: {…}, cutMode: {…}, proofTransformation: {…}, notations: {…} }
ll-mode.js:26:17
isLeftSide: false ll-mode.js:27:17
Getting interactive rules ll-mode.js:35:21
Interactive rules found: 
Array [ {…} ]
ll-mode.js:37:21
Available rules for this formula: 
Array [ {…} ]
rule-engine.js:120:17
setupFormulaInteraction called for formula: 
Object { type: "dual", value: {…} }
rule-engine.js:111:17
Rule engine type: LLRuleEngine rule-engine.js:112:17
Options: 
Object { withInteraction: true, exportButtons: true, checkProvability: true, autoReverse: {…}, intuitionisticMode: {…}, cutMode: {…}, proofTransformation: {…}, notations: {…} }
rule-engine.js:113:17
LLRuleEngine.getRules called for formula: 
Object { type: "dual", value: {…} }
ll-mode.js:25:17
Options: 
Object { withInteraction: true, exportButtons: true, checkProvability: true, autoReverse: {…}, intuitionisticMode: {…}, cutMode: {…}, proofTransformation: {…}, notations: {…} }
ll-mode.js:26:17
isLeftSide: false ll-mode.js:27:17
Getting interactive rules ll-mode.js:35:21
Interactive rules found: 
Array [ {…} ]
ll-mode.js:37:21
Available rules for this formula: 
Array [ {…} ]
rule-engine.js:120:17
setupFormulaInteraction called for formula: 
Object { type: "litt", value: "A" }
rule-engine.js:111:17
Rule engine type: LLRuleEngine rule-engine.js:112:17
Options: 
Object { withInteraction: true, exportButtons: true, checkProvability: true, autoReverse: {…}, intuitionisticMode: {…}, cutMode: {…}, proofTransformation: {…}, notations: {…} }
rule-engine.js:113:17
LLRuleEngine.getRules called for formula: 
Object { type: "litt", value: "A" }
ll-mode.js:25:17
Options: 
Object { withInteraction: true, exportButtons: true, checkProvability: true, autoReverse: {…}, intuitionisticMode: {…}, cutMode: {…}, proofTransformation: {…}, notations: {…} }
ll-mode.js:26:17
isLeftSide: false ll-mode.js:27:17
Getting interactive rules ll-mode.js:35:21
Interactive rules found: 
Array [ {…} ]
ll-mode.js:37:21
Available rules for this formula: 
Array [ {…} ]
rule-engine.js:120:17
setupFormulaInteraction called for formula: 
Object { type: "litt", value: "B" }
rule-engine.js:111:17
Rule engine type: LLRuleEngine rule-engine.js:112:17
Options: 
Object { withInteraction: true, exportButtons: true, checkProvability: true, autoReverse: {…}, intuitionisticMode: {…}, cutMode: {…}, proofTransformation: {…}, notations: {…} }
rule-engine.js:113:17
LLRuleEngine.getRules called for formula: 
Object { type: "litt", value: "B" }
ll-mode.js:25:17
Options: 
Object { withInteraction: true, exportButtons: true, checkProvability: true, autoReverse: {…}, intuitionisticMode: {…}, cutMode: {…}, proofTransformation: {…}, notations: {…} }
ll-mode.js:26:17
isLeftSide: false ll-mode.js:27:17
Getting interactive rules ll-mode.js:35:21
Interactive rules found: 
Array [ {…} ]
ll-mode.js:37:21
Available rules for this formula: 
Array [ {…} ]
rule-engine.js:120:17
